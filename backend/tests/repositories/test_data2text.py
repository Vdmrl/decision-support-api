import pytest

from repositories.data2text import ProjectData, SupportData


class TestProjectData:
    async def test_init(self):
        pd = ProjectData()
        assert pd.texts == []

    @pytest.mark.parametrize("project_id, ans", [(41, True), (123, False), (-1, False), (9999999999999, False)])
    async def test_is_in_db(self, project_id, ans):
        assert await ProjectData.is_in_db(project_id) == ans

    @pytest.mark.parametrize(
        "project_id, ans",
        [
            (
                41,
                'Управление проектом Россия Россия Московская область Москва Университет ООО "Рога и копыта" Менеджер '
                "Высшее Информационные технологии МГУ Кандидат наук Профессор Опыт работы в области IT более 5 лет Профиль "
                "на Linkedin Резюме 1: описание опыта работы Резюме 2: образование и курсы Дополнительное резюме 2015 "
                "Информационные технологии Больше 5 лет Больше 2 лет Опыт ведения бизнеса более 3 лет Опыт преподавания "
                "более 2 лет Опыт научной экспертизы более 4 лет Основные публикации: перечень статей Английский, "
                "Русский Photoshop, Python, SQL Управление финансами проекта Украина Украина Киевская область Киев Институт "
                'ИТ ООО "Технологии будущего" Разработчик Высшее Информационные системы КПИ Доктор наук Профессор Более 10 '
                "лет работы в сфере ИТ Профиль на Github Резюме: разработка программного обеспечения Резюме: учебная и "
                "профессиональная история Дополнительное резюме: проекты и достижения 2007 Информационные системы и "
                "технологии Более 10 лет в сфере разработки ПО Более 5 лет опыта аналитики Управление проектами более 7 лет "
                "Опыт преподавания курсов программирования Научные публикации по теме ИТ Основные работы: список статей и "
                "проектов Английский, Украинский Java, JavaScript, SQL",
            ),
            (123, ""),
            (-1, ""),
            (9999999999999, ""),
        ],
    )
    async def test_accounts_to_texts(self, project_id, ans):
        pd = ProjectData()
        await pd.accounts_to_texts(project_id)
        assert await pd.get_text() == ans

    @pytest.mark.parametrize(
        "project_id, ans",
        [
            (
                41,
                "Разработка CRM-системы Разработка и внедрение системы управления взаимоотношениями с клиентами (CRM) для "
                "увеличения эффективности бизнес-процессов и улучшения обслуживания клиентов. Анализ требований 2024 Москва "
                'Москва ООО "Развитие технологий", Москва',
            ),
            (123, ""),
            (-1, ""),
            (9999999999999, ""),
        ],
    )
    async def test_project_data_to_texts(self, project_id, ans):
        pd = ProjectData()
        await pd.project_data_to_texts(project_id)
        assert await pd.get_text() == ans

    @pytest.mark.parametrize(
        "project_id, ans",
        [
            (
                41,
                'CRM-система "Прогресс" Иванов Иван Иванович 2025-06-30 5000000 Петров Пётр Петрович +7 (999) 123-45-67 '
                "example@example.com",
            ),
            (123, ""),
            (-1, ""),
            (9999999999999, ""),
        ],
    )
    async def test_project_passport_to_texts(self, project_id, ans):
        pd = ProjectData()
        await pd.project_passport_to_texts(project_id)
        assert await pd.get_text() == ans

    @pytest.mark.parametrize(
        "project_id, ans",
        [
            (
                41,
                "Конференция по искусственному интеллекту для специалистов искусственного интеллекта и машинного обучения "
                "Иванов Петр, Петров Сергей, Сидоров Александр Очная Участник конференции по искусственному интеллекту "
                "Участник саммита по искусственному интеллекту",
            ),
            (123, ""),
            (-1, ""),
            (9999999999999, ""),
        ],
    )
    async def test_event_to_texts(self, project_id, ans):
        pd = ProjectData()
        await pd.event_to_texts(project_id)
        assert await pd.get_text() == ans

    @pytest.mark.parametrize("project_id, ans", [(41, ""), (123, ""), (-1, ""), (9999999999999, "")])
    async def test_clear(self, project_id, ans):
        pd = ProjectData()
        await pd.event_to_texts(41)
        pd.clear()
        assert await pd.get_text() == ans


class TestSupportData:
    async def test_init(self):
        sd = SupportData()
        assert sd.texts == []

    @pytest.mark.parametrize(
        "support_id, ans",
        [
            (
                1,
                "Программа грантов для молодых предпринимателей с целью поддержки развития их бизнес-идей. Акселератор Техническое Выход на новые рынки Школьник Москва MOW",
            ),
            (123, ""),
            (-1, ""),
            (9999999999999, ""),
        ],
    )
    async def test_support_to_texts(self, support_id, ans):
        sd = SupportData()
        await sd.support_to_texts(support_id)
        assert await sd.get_text() == ans

    @pytest.mark.parametrize(
        "support_id, ans",
        [
            (1, 'Описание института поддержки стартапов "Новатор" Органы власти Москва MOW'),
            (123, ""),
            (-1, ""),
            (9999999999999, ""),
        ],
    )
    async def test_institute_to_texts(self, support_id, ans):
        sd = SupportData()
        await sd.institute_to_texts(support_id)
        assert await sd.get_text() == ans

    async def test_get_all_texts(self):
        ans_dict = {
            1: 'Программа грантов для молодых предпринимателей с целью поддержки развития их бизнес-идей. Акселератор Техническое Выход на новые рынки Школьник Москва MOW Описание института поддержки стартапов "Новатор" Органы власти Москва MOW',
            2: 'Программа инкубации для стартапов, предоставляющая помещение, обучение, консультации и доступ к инвесторам. Конкурс Медицина и биология Увеличение производственной мощности Физическое лицо Санкт-Петербург SPB Описание Стартап Инкубатора "Созвездие" Институт развития Санкт-Петербург SPB',
            3: "Ежегодный конкурс лучших бизнес-планов для стартапов. Победители получат финансирование и поддержку для реализации своих проектов. Контракт Экономика Поручительство Ученые Новосибирск NVS Описание Центра Технологической Инновации Научный фонд Новосибирск NVS",
            4: 'Ускорительная программа для стартапов с направленностью на технологические инновации и глобальный рынок. Запрос инноваций Гуманитарное Обучение персонала Студенты Екатеринбург SVR Описание Института Развития Стартапов "Прогресс" Университет Екатеринбург SVR',
            5: "Индивидуальные консультации и коучинг для предпринимателей с целью развития их компетенций и управленческого потенциала. Грант и субсидия Информационные технологии Техническая модернизация Инфраструктура Нижний Новгород NNG Описание Центра Креативных Технологий Акселератор Нижний Новгород NNG",
            6: "Финансовая поддержка для перспективных стартапов с целью их масштабирования и выхода на мировой рынок. Инвестиции Энергетика и экология Маркетинговые исследования Малый бизнес Казань KZN Описание Инновационного Лабораторного Комплекса Инфраструктура Казань KZN",
            7: 'Специализированные образовательные курсы для стартапов по различным аспектам бизнеса и предпринимательства. Наставничество Производство и инжиниринг Финансовая поддержка Инвесторы Челябинск CHE Описание Бизнес Акселератора "Старт" Научно-образовательный центр Челябинск CHE',
            8: 'Инфраструктура и сервисы для технологических стартапов: офисные помещения, лаборатории, оборудование и т.д. Обучение Туризм и гостеприимство Развитие инноваций Эксперты Омск OMS Описание Центра Инновационного Развития "Перспектива" Исследовательский институт Омск OMS',
            9: "Программа по наставничеству для стартапов, позволяющая получить советы и опыт успешных бизнесменов и предпринимателей. Техническая поддержка Финансы и бухгалтерия Лоббирование интересов Менторы Самара SAM Описание Института Технологического Предпринимательства Центр технологического развития Самара SAM",
            10: 'Экспертная оценка бизнес-проектов стартапов с целью определения их потенциала и рисков. Маркетинговая поддержка Маркетинг и реклама Интеграция в международные сети Предприниматели Ростов-на-Дону ROS Описание Стартап Фабрики "Инновация" Научно-производственный комплекс Ростов-на-Дону ROS',
        }
        print(await SupportData().get_all_texts())
        assert await SupportData().get_all_texts() == ans_dict

    @pytest.mark.parametrize("support_id, ans", [(1, ""), (123, ""), (-1, ""), (9999999999999, "")])
    async def test_clear(self, support_id, ans):
        sd = SupportData()
        await sd.support_to_texts(support_id)
        sd.clear()
        assert await sd.get_text() == ans
